<?xml version="1.0" encoding="UTF-8"?>
<!-- 첫줄에 공백이나 주석이 있어서는 안된다. xml 선언이 가장 최우선 -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<import resource="context-encryption.xml" />
	
	<context:component-scan
		base-package="com.portfolio.www" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:include-filter type="regex" expression="\.*\.dao\.*" />
	</context:component-scan>

<bean name="bCryptPasswordEncoder" 
	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

<!--  	 DAO 구현체 역할을 대신 해주는 클래스 기본설정 4가지가 필요하다.  -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
<!-- 		myBatis 기본 설정  -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
<!-- 		query 적힌 xml 위치  -->
		<property name="mapperLocations" value="classpath:sql/SQL.*.xml" />
	
<!--  		트랜잭션 관리를 위한 것  -->
		<property name="transactionFactory">
			<bean class="org.mybatis.spring.transaction.SpringManagedTransactionFactory" />
		</property>
	</bean>
	
<!-- 	DAO 위치를 basePackage로.. -->
<!-- 	작업지시서가 있는 패키지 위치를 잡아줘야 사용 할 수 있다 인터페이스에 @Mapper 달아주는 것과 같은 효과? -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.portfolio.www.**.repository" />
<!-- 		<property name="basePackage" value="com.portfolio.www.*.*.repository" /> 위가 맞음 -->
	</bean>
		

<!-- 	트랜잭션 관리를 위한 bean -->
	<bean id="transactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:annotation-driven/>
</beans>